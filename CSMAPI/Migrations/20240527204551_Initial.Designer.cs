// <auto-generated />
using System;
using DataObjects.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSMAPI.Migrations
{
    [DbContext(typeof(CSMDBContext))]
    [Migration("20240527204551_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataObjects.Cruise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Seating")
                        .HasColumnType("int");

                    b.Property<double>("StarRating")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cruises", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2024, 8, 25, 23, 45, 50, 999, DateTimeKind.Local).AddTicks(3465),
                            Name = "Fetorna",
                            Seating = 2000,
                            StarRating = 4.2999999999999998,
                            StartDate = new DateTime(2024, 5, 27, 23, 45, 50, 999, DateTimeKind.Local).AddTicks(3463)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2024, 9, 4, 23, 45, 50, 999, DateTimeKind.Local).AddTicks(3470),
                            Name = "Remoria",
                            Seating = 250,
                            StarRating = 5.0,
                            StartDate = new DateTime(2024, 5, 17, 23, 45, 50, 999, DateTimeKind.Local).AddTicks(3468)
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2024, 9, 30, 23, 45, 50, 999, DateTimeKind.Local).AddTicks(3474),
                            Name = "Extasy",
                            Seating = 4000,
                            StarRating = 4.7999999999999998,
                            StartDate = new DateTime(2024, 6, 10, 23, 45, 50, 999, DateTimeKind.Local).AddTicks(3472)
                        });
                });

            modelBuilder.Entity("DataObjects.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("People", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "st. Saedinenie 2a",
                            DateOfBirth = new DateTime(2003, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "stu2201321037@uni-plovdiv.bg",
                            FirstName = "Yoan",
                            LastName = "Kimanov",
                            Phone = "+359 897 8595 58"
                        },
                        new
                        {
                            Id = 2,
                            Address = "st. Snejanka 54",
                            DateOfBirth = new DateTime(2006, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "i.ivanov@gmail.com",
                            FirstName = "Ivano",
                            LastName = "Ivanov",
                            Phone = "+359 895 6363 42"
                        },
                        new
                        {
                            Id = 3,
                            Address = "st. Asmokorev 3",
                            DateOfBirth = new DateTime(2000, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "yan.bi@bi.yan",
                            FirstName = "Yan",
                            LastName = "Bibiyan",
                            Phone = "+359 888 8888 88"
                        },
                        new
                        {
                            Id = 4,
                            Address = "st. Yorkshire 15",
                            DateOfBirth = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jobody@yahoo.com",
                            FirstName = "John",
                            LastName = "Nobody",
                            Phone = "+1 202 555 0118"
                        });
                });

            modelBuilder.Entity("DataObjects.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BuyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Tickets", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyDate = new DateTime(2024, 5, 27, 23, 45, 50, 999, DateTimeKind.Local).AddTicks(3396),
                            Description = "Access to Cruise - Fetorna (From France to Japan), Medium-sized room, Free Breakfast and Lunch",
                            ExpireDate = new DateTime(2025, 5, 27, 23, 45, 50, 999, DateTimeKind.Local).AddTicks(3437),
                            PersonId = 1,
                            Price = 1000.0
                        },
                        new
                        {
                            Id = 2,
                            BuyDate = new DateTime(2024, 5, 7, 23, 45, 50, 999, DateTimeKind.Local).AddTicks(3442),
                            Description = "Access to Cruise - Remoria (World Cruise), King-sized room, Free Breakfast, Lunch and Alchohol",
                            ExpireDate = new DateTime(2025, 5, 27, 23, 45, 50, 999, DateTimeKind.Local).AddTicks(3444),
                            PersonId = 2,
                            Price = 5200.0
                        });
                });

            modelBuilder.Entity("DataObjects.Ticket", b =>
                {
                    b.HasOne("DataObjects.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
